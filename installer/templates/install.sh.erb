#!/bin/bash

set -e

BASE_DIR=$(dirname "$0")
SOURCE="$BASE_DIR/sources"
DATA_DIR="$BASE_DIR/data"

nocheck=no
noinst=no
showlist=no
install_ranguba_only=no
EMBED_EXTRACTED_CONFIG=<%= @embed_extracted_config %>
until test $# = 0; do
    case "$1" in
      (--download-only)
	nocheck=yes
	noinst=yes
	;;
      (--list)
	nocheck=yes
	noinst=yes
	showlist=yes
	;;
      (--check-only)
	noinst=yes
	;;
      (--install-ranguba-only)
	nocheck=yes
	install_ranguba_only=yes
	;;
      (--user)
	shift
	RANGUBA_USERNAME="$1"
	;;
      (--prefix)
	shift
	PREFIX="$1"
	;;
      (--httpd-prefix)
	shift
	HTTPD_PREFIX="$1"
	;;
      (--apxs2-path)
	shift
	APXS2_PATH="$1"
	;;
      (--apr-config-path)
	shift
	APR_CONFIG_PATH="$1"
	;;
      (--document-root)
	shift
	DOCUMENT_ROOT="$1"
	;;
      (--embed-extracted-config)
	shift
	EMBED_EXTRACTED_CONFIG=true
	;;
      (--rails-base-uri)
	shift
	RAILS_BASE_URI="$1"
	;;
      (--application-name)
        shift
	APPLICATION_NAME="$1"
	;;
      (--)
	shift
	break
	;;
      (-*)
	echo "$0: unknown option $1" 1>&2
	exit 1
	;;
      (*)
	break
	;;
    esac
    shift
done

if test -z "$RANGUBA_USERNAME"; then
    RANGUBA_USERNAME="<%= @user %>"
fi
if test -z "$HTTPD_PREFIX"; then
    HTTPD_PREFIX="<%= @httpd_prefix %>"
fi
if test -z "$DOCUMENT_ROOT"; then
    DOCUMENT_ROOT="<%= @document_root %>"
fi
if test -z "$RAILS_BASE_URI"; then
    RAILS_BASE_URI="<%= @rails_base_uri %>"
fi
if test -z "$APPLICATION_NAME"; then
    APPLICATION_NAME="<%= @application_name %>"
fi

SEPARATOR="
"

packages=(
    sudo

    bison
    diffutils
    file
    gcc
    gcc-c++
    intltool
    make
    pkgconfig
    scrollkeeper
    wget
    which
    tar
    gzip
    cpio

    fontconfig-devel
    gamin-devel
    gettext-devel
    gtk+-devel
    gtk2-devel
    libgsf-devel
    libjpeg-devel
    libpng-devel
    libtiff-devel
    openssl-devel
    readline-devel
    bzip2-devel
    zlib-devel

    fonts-japanese

    curl-devel
)

function abort() {
    local status=$?
    if test $# = 0; then
	echo Failed
    else
	echo "$*"
    fi
    if test $status = 0; then
	status=1
    fi
    exit $status
}

function check_current_directory() {
    if ! pwd | grep -q -E '^/tmp'; then
	echo "You must extract installer in /tmp. Aborting"
	exit 1
    fi
}

function checkroot() {
    if test `id -u` -ne 0; then
	echo "This installer must be run with administrator privileges. Aborting"
	exit 1
    fi
}

function prepare_user() {
    if ! getent passwd | grep -q ${RANGUBA_USERNAME}; then
	    /usr/sbin/useradd $RANGUBA_USERNAME
    fi
}

function check_rpm_packages() {
    local missing=()
    for pkg in "${packages[@]}"; do
	if ! msg=$(rpm -q "$pkg" 2>&1); then
	    missing=("${missing[@]}" "$pkg")
	    echo "$msg" 1>&$log
	fi
    done
    if test ${#missing[@]} -gt 0; then
	for pkg in "${missing[@]}"; do
	    echo -n "Installing ${pkg} ..."
	    yum install -y $pkg 1>&$log 2>&1 || abort
	    echo done
	done
    fi
}

function check_libreoffice_packages() {
    local rpmdbpath="$PREFIX/rpm"
    if ! rpm -qa | grep -q libreoffice; then
	if ! rpm --dbpath "$rpmdbpath" -qa | grep -q libreoffice; then
	    echo -n "Installing LibreOffice ..."
	    mkdir -p "$rpmdbpath"
	    rpm --initdb --dbpath "$rpmdbpath"
	    tar xfz $SOURCE/LibO_3.3.0rc1_Linux_x86-64_install-rpm_en-US.tar.gz -C $SOURCE
	    tar xfz $SOURCE/LibO_3.3.0rc1_Linux_x86-64_langpack-rpm_ja.tar.gz -C $SOURCE
	    rpm --dbpath "$rpmdbpath" --prefix $PREFIX/libreoffice -i $SOURCE/LibO_3.3.0rc1_Linux_x86-64_install-rpm_en-US/RPMS/*.rpm 1>&$log 2>&1 || abort
	    rpm --dbpath "$rpmdbpath" --prefix $PREFIX/libreoffice -i $SOURCE/LibO_3.3.0rc1_Linux_x86-64_langpack-rpm_ja/RPMS/*.rpm 1>&$log 2>&1 || abort
	    mkdir -p "$PREFIX/bin"
	    cp $DATA_DIR/libreoffice "$PREFIX/bin/libreoffice"
	    echo done
	fi
    fi
}

function set_httpd_vars() {
    if test -x "$APXS2_PATH"; then
	HTTPD_CONF_DIR=$("${APXS2_PATH}" -q SYSCONFDIR)
	APACHECTL_PATH=$("${APXS2_PATH}" -q SBINDIR)/apachectl
    else
	APXS2_PATH=$("$PREFIX/bin/ruby" -rphusion_passenger -rphusion_passenger/platform_info/apache -e 'print PhusionPassenger::PlatformInfo.apxs2')
	if test -x "$APXS2_PATH"; then
	    HTTPD_CONF_DIR=$("${APXS2_PATH}" -q SYSCONFDIR)
	    APACHECTL_PATH=$("${APXS2_PATH}" -q SBINDIR)/apachectl
	else
	    if test $HTTPD_PREFIX; then
		HTTPD_CONF_DIR="$HTTPD_PREFIX/conf/"
		APACHECTL_PATH="$HTTPD_PREFIX/bin/apachectl"
	    else
		echo <<EOF
Please run below commands.

  $ ruby -S passenger-install-apache2-module --snippet > ranguba.conf
  $ edit ranguba.conf
  $ cp ranguba.conf <your httpd.conf directory>
  $ echo include <path/to/ranguba.conf> >> <your httpd.conf>
EOF
	    fi
	fi
    fi
}

function append_ranguba_conf_to_httpd_conf() {
    set_httpd_vars
    if $EMBED_EXTRACTED_CONFIG; then
	if ! grep -q "$PREFIX" "${HTTPD_CONF_DIR}/httpd.conf"; then
	    cat "$PREFIX/$APPLICATION_NAME/$APPLICATION_NAME.conf" >> "${HTTPD_CONF_DIR}/httpd.conf"
	fi
    else
	if ! grep -q "$APPLICATION_NAME.conf" "${HTTPD_CONF_DIR}/httpd.conf"; then
	    echo "include ${PREFIX}/$APPLICATION_NAME/$APPLICATION_NAME.conf" >> "${HTTPD_CONF_DIR}/httpd.conf"
	fi
    fi
    if test ! -L "$DOCUMENT_ROOT/$APPLICATION_NAME"; then
	ln -s "$PREFIX/$APPLICATION_NAME/public" "$DOCUMENT_ROOT/$APPLICATION_NAME"
    fi
    test -x $APACHECTL_PATH && $APACHECTL_PATH restart
}

ARCH=$(uname --machine)
case $ARCH in
  (x86_64*)
    lib=lib64
    ;;
  (*)
    lib=lib
    ;;
esac

if test "$noinst" = no; then
    log_file="install-$(date +%Y%m%d%H%M%S).log"
    exec 3> $log_file
    log=3
else
    log=
fi
test $log && echo "Start: $(LC_ALL=C date)" 1>&$log
test $log && chmod 0666 $log_file

check_current_directory
checkroot
prepare_user

if test -z "$PREFIX"; then
    PREFIX="<%= @prefix %>"
fi

if ! test -d "${SOURCE}"; then
    sudo -u $RANGUBA_USERNAME mkdir -p sources
    SOURCE=sources
fi

if test "$nocheck" != yes; then
    check_rpm_packages
    check_libreoffice_packages
fi

if sudo -u "$RANGUBA_USERNAME" test ! -O "$PREFIX"; then
    original_owner=$(stat -c %U "$PREFIX")
    chown -R "$RANGUBA_USERNAME" "$PREFIX"
fi

sudo -H -u $RANGUBA_USERNAME \
    nocheck="$nocheck" \
    noinst="$noinst" \
    showlist="$showlist" \
    install_ranguba_only="$install_ranguba_only" \
    PREFIX="$PREFIX" \
    HTTPD_PREFIX="$HTTPD_PREFIX" \
    APXS2_PATH="$APXS2_PATH" \
    APR_CONFIG_PATH="$APR_CONFIG_PATH" \
    SOURCE="$SOURCE" \
    DATA_DIR="$DATA_DIR" \
    SEPARATOR="'$SEPARATOR'" \
    lib="$lib" \
    RAILS_BASE_URI="$RAILS_BASE_URI" \
    APPLICATION_NAME="$APPLICATION_NAME" \
    log_file="$log_file" \
    bash ./install_sources_and_gems.sh

if test "$noinst" = no; then
    append_ranguba_conf_to_httpd_conf
fi

if test -n "$original_owner"; then
    chown -R "$original_owner" "$PREFIX"
fi
chown -R "$RANGUBA_USERNAME":"$RANGUBA_USERNAME" "$PREFIX/$APPLICATION_NAME"

test $fd && echo "Finished: $(LC_ALL=C date)" 1>&$log
exec 3>&-

# Local Variables:
# tab-width: 8
# indent-tabs-mode: t
# End:

